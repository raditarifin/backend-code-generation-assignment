{
  "info": {
    "name": "TODO List API Collection",
    "description": "Complete API collection for the TODO List Management API with authentication, lists, and tasks endpoints",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "apiVersion",
      "value": "v1",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "listId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health & Info",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "API Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api",
              "host": ["{{baseUrl}}"],
              "path": ["api"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('authToken', responseJson.data.token);",
                  "        pm.collectionVariables.set('userId', responseJson.data.user.id);",
                  "        console.log('Auth token saved:', responseJson.data.token);",
                  "        console.log('User ID saved:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('authToken', responseJson.data.token);",
                  "        pm.collectionVariables.set('userId', responseJson.data.user.id);",
                  "        console.log('Auth token saved:', responseJson.data.token);",
                  "        console.log('User ID saved:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@todoapi.com\",\n  \"password\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('authToken', responseJson.data.token);",
                  "        pm.collectionVariables.set('userId', responseJson.data.user.id);",
                  "        console.log('Auth token saved:', responseJson.data.token);",
                  "        console.log('User ID saved:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@todoapi.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('authToken', responseJson.data.token);",
                  "        console.log('Auth token refreshed:', responseJson.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "auth", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìã Lists Management",
      "item": [
        {
          "name": "Get All Lists",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists?page=1&limit=10&sort_field=created_at&sort_order=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sort_field",
                  "value": "created_at"
                },
                {
                  "key": "sort_order",
                  "value": "desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create New List",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('listId', responseJson.data.id);",
                  "        console.log('List ID saved:', responseJson.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Work Tasks\",\n  \"description\": \"List of work-related tasks and projects\",\n  \"color\": \"#3498db\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"]
            }
          },
          "response": []
        },
        {
          "name": "Get List by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists", "{{listId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update List",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Work Tasks\",\n  \"description\": \"Updated list of work-related tasks and projects\",\n  \"color\": \"#e74c3c\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists", "{{listId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get List Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists/{{listId}}/tasks?page=1&limit=10&status=pending&priority=high",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists", "{{listId}}", "tasks"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "priority",
                  "value": "high"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete List",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists", "{{listId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚úÖ Tasks Management",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks?page=1&limit=10&status=pending&priority=high&sort_field=deadline&sort_order=asc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "priority",
                  "value": "high"
                },
                {
                  "key": "sort_field",
                  "value": "deadline"
                },
                {
                  "key": "sort_order",
                  "value": "asc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create New Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data) {",
                  "        pm.collectionVariables.set('taskId', responseJson.data.id);",
                  "        console.log('Task ID saved:', responseJson.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"list_id\": \"{{listId}}\",\n  \"title\": \"Complete API Documentation\",\n  \"description\": \"Write comprehensive API documentation with examples\",\n  \"deadline\": \"2025-07-15T23:59:59.000Z\",\n  \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks"]
            }
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "{{taskId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete API Documentation (Updated)\",\n  \"description\": \"Write comprehensive API documentation with examples and Postman collection\",\n  \"deadline\": \"2025-07-20T23:59:59.000Z\",\n  \"priority\": \"medium\",\n  \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "{{taskId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Complete Task",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/{{taskId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "{{taskId}}", "complete"]
            }
          },
          "response": []
        },
        {
          "name": "Get Tasks by Priority",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/priority/high",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "priority", "high"]
            }
          },
          "response": []
        },
        {
          "name": "Move Task to Different List",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"list_id\": \"new-list-id-here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "{{taskId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks", "{{taskId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Search & Filter Examples",
      "item": [
        {
          "name": "Search Lists",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists?search=work&color=%23e74c3c",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"],
              "query": [
                {
                  "key": "search",
                  "value": "work"
                },
                {
                  "key": "color",
                  "value": "%23e74c3c"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Filter Tasks by Date Range",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks?deadline_from=2025-07-01&deadline_to=2025-07-31&status=pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks"],
              "query": [
                {
                  "key": "deadline_from",
                  "value": "2025-07-01"
                },
                {
                  "key": "deadline_to",
                  "value": "2025-07-31"
                },
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Tasks by Title",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/tasks?search=documentation&priority=high&sort_field=deadline&sort_order=asc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "tasks"],
              "query": [
                {
                  "key": "search",
                  "value": "documentation"
                },
                {
                  "key": "priority",
                  "value": "high"
                },
                {
                  "key": "sort_field",
                  "value": "deadline"
                },
                {
                  "key": "sort_order",
                  "value": "asc"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚ùå Error Examples",
      "item": [
        {
          "name": "Unauthorized Request (No Token)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token-here",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Request Body",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invalid_field\": \"invalid value\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists"]
            }
          },
          "response": []
        },
        {
          "name": "Not Found Resource",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/{{apiVersion}}/lists/non-existent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "{{apiVersion}}", "lists", "non-existent-id"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
